{"ast":null,"code":"var _jsxFileName = \"/Users/jaremy/Desktop/Projects/receipts-genius/src/components/AddReceiptForm.js\";\nimport React from 'react';\nimport { amountSetMoney, setMaxDate } from \"../scripts/utilityFunctions\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendar } from \"@fortawesome/free-regular-svg-icons\";\n\nclass AddReceiptForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onAmountInputChange = this.onAmountInputChange.bind(this);\n    this.handleFiles = this.handleFiles.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCategorySelect = this.handleCategorySelect.bind(this);\n    this.state = {\n      name: \"\",\n      date: \"\",\n      total: \"\",\n      category: \"\",\n      description: \"\",\n      fileName: \"\",\n      fileType: \"\",\n      fileSize: \"\",\n      formNameClasses: \"form-control\",\n      formFileClasses: \"form-control-file\",\n      formAmountClasses: \"form-control\",\n      formDateClasses: \"form-control\"\n    };\n  }\n\n  handleClose() {\n    this.props.closeModal();\n  }\n\n  handleSubmit(event) {\n    var valid = true;\n    var fileInput = this.refs.fileInput;\n    var vendorRetailer = this.refs.vendorRetailer;\n    var datePicker = this.refs.datePicker;\n    var amountInput = this.refs.amountInput;\n\n    if (!fileInput.checkValidity()) {\n      fileInput.classList.add(\"invalidFile\");\n      valid = false;\n    } else {\n      fileInput.classList.remove(\"invalidFile\");\n      valid = true;\n    }\n\n    if (!vendorRetailer.checkValidity()) {\n      vendorRetailer.classList.add(\"invalid\");\n      valid = false;\n    } else {\n      vendorRetailer.classList.remove(\"invalid\");\n      valid = true;\n    }\n\n    if (!datePicker.checkValidity()) {\n      datePicker.classList.add(\"invalid\");\n      valid = false;\n    } else {\n      datePicker.classList.remove(\"invalid\");\n      valid = true;\n    }\n\n    if (!amountInput.checkValidity()) {\n      amountInput.classList.add(\"invalid\");\n      valid = false;\n    } else {\n      amountInput.classList.remove(\"invalid\");\n      valid = true;\n    }\n\n    if (valid) {\n      var total = Number(this.state.total.replace(/\\$|,/g, '')); // date in wrong format\n\n      var dateSplit = this.state.date.split(\"-\");\n      var date = dateSplit[1] + \"/\" + dateSplit[2] + \"/\" + dateSplit[0];\n      var newReceipt = {\n        id: this.props.lastReceiptID + 1,\n        name: this.state.name,\n        date: date,\n        total: total,\n        category: this.state.category,\n        description: this.state.description,\n        file: {\n          name: this.state.fileName,\n          type: this.state.fileType,\n          size: this.state.fileSize\n        }\n      };\n      this.props.addReceipt(newReceipt); // var joined = this.state.receipts.concat(newReceipt);\n      // this.setState({ receipts: joined });\n\n      this.handleClose();\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    var value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleCategorySelect(event) {\n    const value = event.target.id;\n\n    if (this.state.category === value) {\n      this.setState({\n        category: ''\n      });\n    } else {\n      this.setState({\n        category: value\n      });\n    }\n  }\n\n  handleFiles(event) {\n    const file = event.currentTarget.files[0];\n    this.setState({\n      fileName: file.name\n    });\n    this.setState({\n      fileType: file.type\n    });\n    this.setState({\n      fileSize: file.size\n    });\n  }\n\n  onAmountInputChange(e) {\n    const re = /^\\$?\\-?([1-9]{1}[0-9]{0,2}(\\,\\d{3})*(\\.\\d{0,2})?|[1-9]{1}\\d{0,}(\\.\\d{0,2})?|0(\\.\\d{0,2})?|(\\.\\d{1,2}))$|^\\-?\\$?([1-9]{1}\\d{0,2}(\\,\\d{3})*(\\.\\d{0,2})?|[1-9]{1}\\d{0,}(\\.\\d{0,2})?|0(\\.\\d{0,2})?|(\\.\\d{1,2}))$|^\\(\\$?([1-9]{1}\\d{0,2}(\\,\\d{3})*(\\.\\d{0,2})?|[1-9]{1}\\d{0,}(\\.\\d{0,2})?|0(\\.\\d{0,2})?|(\\.\\d{1,2}))\\)$/;\n\n    if (e.target.value === '' || re.test(e.target.value)) {\n      e.target.value = e.target.value;\n    } else {\n      e.target.value = '';\n    }\n\n    this.setState({\n      total: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"fileInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Receipt File*\"), React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control-file\",\n      id: \"fileInput\",\n      ref: \"fileInput\",\n      onChange: e => this.handleFiles(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"vendorRetailer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Vendor/Retailer*\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      className: \"form-control\",\n      id: \"vendorRetailer\",\n      ref: \"vendorRetailer\",\n      placeholder: \"Vendor\",\n      onChange: e => this.handleChange(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"datePicker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Transaction Date*\"), React.createElement(\"div\", {\n      className: \"calendar-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      name: \"date\",\n      className: \"form-control\",\n      id: \"datePicker\",\n      ref: \"datePicker\",\n      onChange: e => this.handleChange(e),\n      onClick: () => setMaxDate(\"datePicker\"),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      class: \"calendar-icon\",\n      icon: faCalendar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"amountInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Receipt Total ($USD)*\"), React.createElement(\"div\", {\n      className: \"calendar-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"total\",\n      className: \"form-control\",\n      id: \"amountInput\",\n      ref: \"amountInput\",\n      onChange: this.onAmountInputChange,\n      onBlur: () => amountSetMoney(),\n      placeholder: \"Receipt Total\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }))))), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Category\"), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      id: \"Supplies\",\n      onClick: e => this.handleCategorySelect(e),\n      className: (() => {\n        if (this.state.category == \"Supplies\") {\n          return \"subscription-btn btn btn-light category-btn selected\";\n        } else {\n          return \"subscription-btn btn btn-light category-btn\";\n        }\n      })(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \" Supplies\")), React.createElement(Col, {\n      xs: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      id: \"Subscriptions\",\n      onClick: e => this.handleCategorySelect(e),\n      className: (() => {\n        if (this.state.category == \"Subscriptions\") {\n          return \"subscription-btn btn btn-light category-btn selected\";\n        } else {\n          return \"subscription-btn btn btn-light category-btn\";\n        }\n      })(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \" Subscriptions\")), React.createElement(Col, {\n      xs: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      id: \"Personal\",\n      onClick: e => this.handleCategorySelect(e),\n      className: (() => {\n        if (this.state.category == \"Personal\") {\n          return \"subscription-btn btn btn-light category-btn selected\";\n        } else {\n          return \"subscription-btn btn btn-light category-btn\";\n        }\n      })(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \" Personal\"))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      name: \"description\",\n      onChange: e => this.handleChange(e),\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }))), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"* Indicates a required field\"), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"6\",\n      xs: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: \"6\",\n      xs: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => this.handleClose(),\n      className: \"btn btn-secondary cancel-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => this.handleSubmit(e),\n      className: \"btn btn-primary submit-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Add Receipt\")))));\n  }\n\n}\n\nexport default AddReceiptForm;","map":{"version":3,"sources":["/Users/jaremy/Desktop/Projects/receipts-genius/src/components/AddReceiptForm.js"],"names":["React","amountSetMoney","setMaxDate","Form","Col","FontAwesomeIcon","faCalendar","AddReceiptForm","Component","constructor","props","handleClose","bind","handleSubmit","onAmountInputChange","handleFiles","handleChange","handleCategorySelect","state","name","date","total","category","description","fileName","fileType","fileSize","formNameClasses","formFileClasses","formAmountClasses","formDateClasses","closeModal","event","valid","fileInput","refs","vendorRetailer","datePicker","amountInput","checkValidity","classList","add","remove","Number","replace","dateSplit","split","newReceipt","id","lastReceiptID","file","type","size","addReceipt","target","value","setState","currentTarget","files","e","re","test","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {amountSetMoney, setMaxDate} from \"../scripts/utilityFunctions\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCalendar} from \"@fortawesome/free-regular-svg-icons\";\n\nclass AddReceiptForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleClose = this.handleClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onAmountInputChange = this.onAmountInputChange.bind(this);\n        this.handleFiles = this.handleFiles.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleCategorySelect = this.handleCategorySelect.bind(this);\n\n        this.state = {\n            name: \"\",\n            date: \"\",\n            total: \"\",\n            category: \"\",\n            description: \"\",\n            fileName: \"\",\n            fileType: \"\",\n            fileSize: \"\",\n            formNameClasses: \"form-control\",\n            formFileClasses: \"form-control-file\",\n            formAmountClasses: \"form-control\",\n            formDateClasses: \"form-control\"\n        };\n    }\n\n    handleClose() {\n        this.props.closeModal();\n    }\n\n    handleSubmit(event) {\n\n        var valid = true;\n        var fileInput = this.refs.fileInput;\n        var vendorRetailer = this.refs.vendorRetailer;\n        var datePicker = this.refs.datePicker;\n        var amountInput = this.refs.amountInput;\n\n        if (!fileInput.checkValidity()) {\n            fileInput.classList.add(\"invalidFile\");\n            valid = false;\n        } else {\n            fileInput.classList.remove(\"invalidFile\");\n            valid = true;\n        }\n\n        if (!vendorRetailer.checkValidity()) {\n            vendorRetailer.classList.add(\"invalid\");\n            valid = false;\n        } else {\n            vendorRetailer.classList.remove(\"invalid\");\n            valid = true;\n        }\n\n        if (!datePicker.checkValidity()) {\n            datePicker.classList.add(\"invalid\");\n            valid = false;\n        } else {\n            datePicker.classList.remove(\"invalid\");\n            valid = true;\n        }\n\n        if (!amountInput.checkValidity()) {\n            amountInput.classList.add(\"invalid\");\n            valid = false;\n        } else {\n            amountInput.classList.remove(\"invalid\");\n            valid = true;\n        }\n\n        if (valid) {\n            var total = Number(this.state.total.replace(/\\$|,/g, ''));\n\n            // date in wrong format\n            var dateSplit = this.state.date.split(\"-\");\n            var date = dateSplit[1] + \"/\" + dateSplit[2] + \"/\" + dateSplit[0];\n\n            var newReceipt = {\n                id: this.props.lastReceiptID + 1,\n                name: this.state.name,\n                date: date,\n                total: total,\n                category: this.state.category,\n                description: this.state.description,\n                file: {\n                    name: this.state.fileName,\n                    type: this.state.fileType,\n                    size: this.state.fileSize,\n                }\n            };\n\n            this.props.addReceipt(newReceipt);\n\n            // var joined = this.state.receipts.concat(newReceipt);\n            // this.setState({ receipts: joined });\n            this.handleClose();\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        var value = target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleCategorySelect(event) {\n        const value = event.target.id;\n        if (this.state.category === value) {\n            this.setState({category: ''});\n        } else {\n            this.setState({category: value});\n        }\n\n    }\n\n    handleFiles(event) {\n        const file = event.currentTarget.files[0];\n        this.setState({fileName: file.name});\n        this.setState({fileType: file.type});\n        this.setState({fileSize: file.size});\n    }\n\n    onAmountInputChange(e){\n        const re = /^\\$?\\-?([1-9]{1}[0-9]{0,2}(\\,\\d{3})*(\\.\\d{0,2})?|[1-9]{1}\\d{0,}(\\.\\d{0,2})?|0(\\.\\d{0,2})?|(\\.\\d{1,2}))$|^\\-?\\$?([1-9]{1}\\d{0,2}(\\,\\d{3})*(\\.\\d{0,2})?|[1-9]{1}\\d{0,}(\\.\\d{0,2})?|0(\\.\\d{0,2})?|(\\.\\d{1,2}))$|^\\(\\$?([1-9]{1}\\d{0,2}(\\,\\d{3})*(\\.\\d{0,2})?|[1-9]{1}\\d{0,}(\\.\\d{0,2})?|0(\\.\\d{0,2})?|(\\.\\d{1,2}))\\)$/\n\n        if (e.target.value === '' || re.test(e.target.value))  {\n            e.target.value = e.target.value;\n        } else {\n            e.target.value = '';\n        }\n\n        this.setState({total: e.target.value});\n    }\n\n    render() {\n        return (\n            <form>\n                <Form.Row>\n                    <Col xs=\"6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"fileInput\">Receipt File*</label>\n                            <input type=\"file\" className=\"form-control-file\" id=\"fileInput\"\n                                   ref=\"fileInput\"\n                                   onChange={e => this.handleFiles(e)} required/>\n                        </div>\n                    </Col>\n                </Form.Row>\n                <Form.Row>\n                    <Col xs=\"6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"vendorRetailer\">Vendor/Retailer*</label>\n                            <input type=\"text\" name=\"name\" className=\"form-control\" id=\"vendorRetailer\"\n                                   ref=\"vendorRetailer\"\n                                   placeholder=\"Vendor\" onChange={e => this.handleChange(e)} required/>\n                        </div>\n                    </Col>\n                </Form.Row>\n                <Form.Row>\n                    <Col xs=\"6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"datePicker\">Transaction Date*</label>\n                            <div className=\"calendar-form-container\">\n                                <input type=\"date\" name=\"date\" className=\"form-control\" id=\"datePicker\"\n                                       ref=\"datePicker\"\n                                       onChange={e => this.handleChange(e)}\n                                       onClick={() => setMaxDate(\"datePicker\")} required/>\n                                <FontAwesomeIcon class=\"calendar-icon\" icon={faCalendar}/>\n                            </div>\n                        </div>\n                    </Col>\n                </Form.Row>\n                <Form.Row>\n                    <Col xs=\"6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"amountInput\">Receipt Total ($USD)*</label>\n                            <div className=\"calendar-form-container\">\n                                <input type=\"text\" name=\"total\" className=\"form-control\"\n                                       id=\"amountInput\" ref=\"amountInput\"\n                                       onChange={this.onAmountInputChange}\n                                       onBlur={() => amountSetMoney()} placeholder=\"Receipt Total\"\n                                       required/>\n                            </div>\n                        </div>\n                    </Col>\n                </Form.Row>\n                <Form.Label>Category</Form.Label>\n                <Form.Row>\n                    {/*Add the selected class based on the category state change*/}\n                    <Col xs=\"4\">\n                        <button type=\"button\" id=\"Supplies\"\n                                onClick={e => this.handleCategorySelect(e)}\n                                className=\n                                    {(() => {\n                                        if (this.state.category == \"Supplies\") {\n                                            return (\n                                                \"subscription-btn btn btn-light category-btn selected\"\n                                            )\n                                        } else {\n                                            return (\n                                                \"subscription-btn btn btn-light category-btn\"\n                                            )\n                                        }\n                                    })()}\n                        > Supplies\n                        </button>\n                    </Col>\n                    <Col xs=\"4\">\n                        <button type=\"button\" id=\"Subscriptions\"\n                                onClick={e => this.handleCategorySelect(e)}\n                                className={(() => {\n                                    if (this.state.category == \"Subscriptions\") {\n                                        return (\n                                            \"subscription-btn btn btn-light category-btn selected\"\n                                        )\n                                    } else {\n                                        return (\n                                            \"subscription-btn btn btn-light category-btn\"\n                                        )\n                                    }\n                                })()}> Subscriptions\n                        </button>\n                    </Col>\n                    <Col xs=\"4\">\n                        <button type=\"button\" id=\"Personal\"\n                                onClick={e => this.handleCategorySelect(e)}\n                                className={(() => {\n                                    if (this.state.category == \"Personal\") {\n                                        return (\n                                            \"subscription-btn btn btn-light category-btn selected\"\n                                        )\n                                    } else {\n                                        return (\n                                            \"subscription-btn btn btn-light category-btn\"\n                                        )\n                                    }\n                                })()}> Personal\n                        </button>\n                    </Col>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} md=\"12\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" name=\"description\"\n                                      onChange={e => this.handleChange(e)} rows=\"3\"/>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Label>* Indicates a required field</Form.Label>\n                <Form.Row>\n                    <Col md=\"6\" xs=\"4\">\n                    </Col>\n                    <Col md=\"6\" xs=\"8\">\n                        <div className=\"button-container\">\n                            <button type=\"button\" onClick={e => this.handleClose()}\n                                    className=\"btn btn-secondary cancel-btn\">\n                                Cancel\n                            </button>\n                            <button type=\"button\" onClick={e => this.handleSubmit(e)}\n                                    className=\"btn btn-primary submit-btn\">\n                                Add Receipt\n                            </button>\n                        </div>\n                    </Col>\n                </Form.Row>\n            </form>\n        );\n    }\n}\nexport default AddReceiptForm;"]},"metadata":{},"sourceType":"module"}